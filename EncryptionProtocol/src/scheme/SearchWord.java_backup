import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.security.NoSuchAlgorithmException;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.Scanner;

import javax.crypto.Cipher;
import javax.crypto.KeyGenerator;
import javax.crypto.NoSuchPaddingException;

import util.SchemeConstants;

public class SearchWord {
static String[] filename;
       /**
       * @param args
       * @throws UnsupportedEncodingException 
        * @throws NoSuchPaddingException 
        * @throws NoSuchAlgorithmException 
        */
       public static void main(String[] args) throws UnsupportedEncodingException, NoSuchAlgorithmException, NoSuchPaddingException {
             Scanner keyboard = new Scanner(System.in);
             System.out.print("Enter source directory: ");
             String src = keyboard.nextLine();
             filereader(src);
       }
       static void filereader(String directpath,byte[] encrypted_word) throws UnsupportedEncodingException, NoSuchAlgorithmException, NoSuchPaddingException
       {
             byte[] l_i;
             File f=new File(directpath);
             File[] files=f.listFiles();
             Arrays.sort(files, new Comparator<File>(){
                 public int compare(File f1, File f2)
                 {
                    //System.out.println(f1.getName()+" " + f2.getName());
                    return Long.valueOf(f2.lastModified()).compareTo(f1.lastModified());
                 } });
             for(int i=0;i<files.length;i++)
             {
                    filename[i]=files[i].getName();
             }
             for(int i=0;i<files.length;i++)
             {
                    byte[] file_name_bytes=filename[i].getBytes("UTF-8");
                    Cipher c;
                    c=Cipher.getInstance("AES");
                    c.init(Cipher.ENCRYPT_MODE, key_dash);
                    byte[]seed = c.doFinal(file_name_bytes);
                    byte[] stream_cipher = new byte[(int) files[i].length()/2];
                    //long seed = (long) Math.floor(Math.random() * 10);
                    SecureRandom rand = new SecureRandom();
                    rand.setSeed(seed);
                    rand.nextBytes(stream_cipher);
                    for(int k=0;i<encrypted_word.length;i++)
                    {
                           l_i[k]=(byte)(encrypted_word[k] ^ stream_cipher[k]);
                    }
                    FileInputStream fstream = new FileInputStream(filename[i]);
                    // Get the object of DataInputStream
                    DataInputStream in = new DataInputStream(fstream);
                    BufferedReader br = new BufferedReader(new InputStreamReader(in));
                    String strLine;
                    //List<String> document = new ArrayList<String>();
                    List<String> docToBeEncrypted = new ArrayList<String>();
                    // Read File Line By Line
                    while ((strLine = br.readLine()) != null) {
                           // Print the content on the console
                           // System.out.println(strLine);
                           strBuf.append(strLine);
                           String[] tmp = strLine.split(" ");
                           Collections.addAll(inputDoc, tmp);
                           strBuf.append("\n");
                    }
                    
             }
       }
}
